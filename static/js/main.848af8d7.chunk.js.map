{"version":3,"sources":["Common/Loader.jsx","Common/Header.jsx","Components/Main/Body.jsx","Components/Main.jsx","Components/Pages/Create.jsx","Components/Pages/Disliked.jsx","Components/Pages/Liked.jsx","Components/Pages/Update.jsx","App.js","index.js"],"names":["Loader","className","Header","handleSearch","useContext","SearchContext","searchRef","useRef","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","style","textDecoration","color","margin","cursor","Form","FormControl","type","ref","placeholder","onChange","current","value","Body","statusDisplay","postList","PostsContext","userList","UserContext","handleDelete","DeleteContext","UpdateContext","handleUpdate","updateName","updatePost","LikedContext","likedList","handleLiked","DislikedContext","dislikedList","handleDisliked","history","useHistory","useState","moreClicked","setMoreClicked","btnText","setBtnText","createPost","data","Card","boxShadow","title","body","map","user","userId","name","Button","onClick","textAlign","email","website","username","company","address","street","city","Footer","includes","postId","ThumbDownAlt","backgroundColor","push","Main","Create","setName","setTitle","setBody","setEmail","setWebsite","setUsername","addressStreet","setAddressStreet","addressCity","setAddressCity","setCompany","handleCreate","CreateContext","Container","minHeight","maxWidth","border","onSubmit","e","preventDefault","Control","target","required","Group","as","rows","Disliked","Liked","Update","handleUpdateDetails","React","createContext","App","setPostList","fakeList","setFakeList","setUserList","loading","setLoading","setLikedList","setDislikedList","setUpdatePost","setUpdateName","useEffect","a","fetch","method","res","json","console","log","fetchDetails","Provider","currentLikedList","currentDislikedList","item","unshift","index","indexOf","splice","prevList","filter","post","searchText","searchedPosts","reg","RegExp","forEach","match","currentPostObject","length","currentUserObject","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.848af8d7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles/loader.css\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useRef } from \"react\";\r\nimport { Nav, Navbar, Form, FormControl, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SearchContext } from \"../App\";\r\nimport \"./styles/header.css\";\r\n\r\nexport const Header = () => {\r\n  const handleSearch = useContext(SearchContext);\r\n  const searchRef = useRef();\r\n  return (\r\n    <Navbar className=\"header-main\" expand=\"lg\">\r\n      <Navbar.Brand className=\"heading\" href=\"/\">\r\n        <b>Details Depictor</b>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"collapse\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link\r\n            to=\"/create\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"black\",\r\n              margin: \"0px 20px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Create a post\r\n          </Link>\r\n          <Link\r\n            to=\"/liked\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"black\",\r\n              margin: \"0px 20px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Liked Posts\r\n          </Link>\r\n          <Link\r\n            to=\"/disliked\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"black\",\r\n              margin: \"0px 20px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Disliked Posts\r\n          </Link>\r\n          <Link\r\n            to=\"/Details_depictor\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"black\",\r\n              margin: \"0px 20px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Home\r\n          </Link>\r\n        </Nav>\r\n        <Form className=\"form-search\">\r\n          <FormControl\r\n            type=\"text\"\r\n            ref={searchRef}\r\n            placeholder=\"Search Posts...\"\r\n            className=\"mr-sm-2\"\r\n            onChange={() => handleSearch(searchRef.current.value)}\r\n          />\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\r\nimport { ThumbDownAlt } from \"@material-ui/icons\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport {\r\n  DeleteContext,\r\n  DislikedContext,\r\n  LikedContext,\r\n  PostsContext,\r\n  UpdateContext,\r\n  UserContext,\r\n} from \"../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Body = ({ statusDisplay }) => {\r\n  const postList = useContext(PostsContext);\r\n  const userList = useContext(UserContext);\r\n  const handleDelete = useContext(DeleteContext);\r\n  const { updateName, updatePost, handleUpdate } = useContext(UpdateContext);\r\n  const { likedList, handleLiked } = useContext(LikedContext);\r\n  const { dislikedList, handleDisliked } = useContext(DislikedContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [moreClicked, setMoreClicked] = useState(false);\r\n  const [btnText, setBtnText] = useState(\"More\");\r\n\r\n  const handleMore = () => {\r\n    if (moreClicked) {\r\n      setMoreClicked(false);\r\n      setBtnText(\"More\");\r\n    } else {\r\n      setMoreClicked(true);\r\n      setBtnText(\"Hide\");\r\n    }\r\n  };\r\n  const createPost = (data) => {\r\n    const changeLiked = (postId) => {\r\n      handleLiked(postId);\r\n    };\r\n    const changeDisliked = (postId) => {\r\n      handleDisliked(postId);\r\n    };\r\n    const getUpdate = (postId) => {\r\n      handleUpdate(postId);\r\n      history.push(\"/update\");\r\n    };\r\n    return (\r\n      <>\r\n        <Card\r\n          style={{ boxShadow: \"5px 5px 10px rgb(131, 130, 130)\" }}\r\n          className=\"text-center m-4 w-75\"\r\n        >\r\n          <Card.Header className=\"card-header bg-dark text-white\">\r\n            <b>{data.title} </b>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {data.body} <hr />\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <b className=\"d-flex\">\r\n                By{\" \"}\r\n                <div className=\"mx-2\" style={{ textDecoration: \"underline\" }}>\r\n                  {userList.map((user) => {\r\n                    if (user.id == data.userId) {\r\n                      return user.name;\r\n                    }\r\n                  })}\r\n                </div>\r\n              </b>\r\n              <Button onClick={() => handleMore()}>{btnText}</Button>\r\n            </div>\r\n            {moreClicked && (\r\n              <div>\r\n                {userList.map((user) => {\r\n                  if (user.id == data.userId) {\r\n                    return (\r\n                      <div style={{ textAlign: \"start\" }}>\r\n                        <div>\r\n                          {\" \"}\r\n                          Email: <b>{user.email}</b>\r\n                        </div>\r\n                        <div>\r\n                          {\" \"}\r\n                          Website: <b>{user.website}</b>\r\n                        </div>\r\n                        <div>\r\n                          {\" \"}\r\n                          Username: <b>{user.username}</b>\r\n                        </div>\r\n                        <div>\r\n                          {\" \"}\r\n                          Company Name: <b>{user.company.name}</b>\r\n                        </div>\r\n                        <div>\r\n                          {\" \"}\r\n                          Address:{\" \"}\r\n                          <b>\r\n                            {user.address.street}, {user.address.city}\r\n                          </b>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            )}\r\n          </Card.Body>\r\n          <Card.Footer className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"d-flex\">\r\n              <div\r\n                className={`${\r\n                  likedList.includes(data) ? \"btn btn-success\" : \"btn btn-light\"\r\n                } `}\r\n                onClick={() => changeLiked(data.id)}\r\n              >\r\n                <ThumbUpIcon />\r\n              </div>\r\n              <div\r\n                className={`${\r\n                  dislikedList.includes(data)\r\n                    ? \"btn btn-danger\"\r\n                    : \"btn btn-light\"\r\n                }`}\r\n                onClick={() => changeDisliked(data.id)}\r\n              >\r\n                <ThumbDownAlt />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n              <div\r\n                className=\"btn text-white d-flex align-items-center\"\r\n                style={{ backgroundColor: \"#5567ff\" }}\r\n                onClick={() => getUpdate(data.id)}\r\n              >\r\n                <EditIcon />\r\n              </div>\r\n              <div\r\n                className=\"btn text-white d-flex align-items-center mx-2\"\r\n                style={{ backgroundColor: \"#ed0b4c\" }}\r\n                onClick={() => handleDelete(data.id)}\r\n              >\r\n                <DeleteForeverIcon />\r\n              </div>\r\n            </div>\r\n          </Card.Footer>\r\n        </Card>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center\">\r\n      {statusDisplay == \"Disliked\" ? (\r\n        <>{dislikedList.map(createPost)}</>\r\n      ) : (\r\n        <>\r\n          {statusDisplay == \"Liked\" ? (\r\n            <>{likedList.map(createPost)}</>\r\n          ) : (\r\n            <>{postList.map(createPost)}</>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"../Common/Header\";\r\nimport { Body } from \"./Main/Body\";\r\n\r\nexport const Main = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Body />\r\n    </div>\r\n  );\r\n};\r\n","import { Divider } from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Container, Form } from \"react-bootstrap\";\r\nimport { CreateContext } from \"../../App\";\r\nimport { Header } from \"../../Common/Header\";\r\n\r\nexport const Create = () => {\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [addressStreet, setAddressStreet] = useState(\"\");\r\n  const [addressCity, setAddressCity] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const handleCreate = useContext(CreateContext);\r\n\r\n  const handlePostDetails = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/Details_depictor\");\r\n    handleCreate(\r\n      name,\r\n      email,\r\n      website,\r\n      username,\r\n      addressStreet,\r\n      addressCity,\r\n      company,\r\n      title,\r\n      body\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"85vh\" }}\r\n      >\r\n        <Card\r\n          className=\"w-100\"\r\n          style={{ maxWidth: \"800px\", border: \"1px solid\" }}\r\n        >\r\n          <Card.Header className=\"card-heading text-center text-white bg-dark\">\r\n            <b>Post Details</b>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => handlePostDetails(e)}>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 \">\r\n                  <label>Creator Name</label>\r\n\r\n                  <Form.Control\r\n                    className=\"my-2\"\r\n                    placeholder=\"Name\"\r\n                    value={name}\r\n                    onChange={(value) => setName(value.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Email</label>\r\n                  <Form.Control\r\n                    className=\"my-2\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(value) => setEmail(value.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 \">\r\n                  <label>Website</label>\r\n\r\n                  <Form.Control\r\n                    className=\"my-2\"\r\n                    placeholder=\"Website\"\r\n                    value={website}\r\n                    onChange={(value) => setWebsite(value.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Username</label>\r\n                  <Form.Control\r\n                    className=\"my-2\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(value) => setUsername(value.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 \">\r\n                  <label>Address Street</label>\r\n\r\n                  <Form.Control\r\n                    className=\"my-2\"\r\n                    placeholder=\"Address Street\"\r\n                    value={addressStreet}\r\n                    onChange={(value) => setAddressStreet(value.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Address City</label>\r\n                  <Form.Control\r\n                    className=\"my-2\"\r\n                    placeholder=\"Address City\"\r\n                    value={addressCity}\r\n                    onChange={(value) => setAddressCity(value.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 \">\r\n                  <label>Company Name</label>\r\n\r\n                  <Form.Control\r\n                    className=\"my-2\"\r\n                    placeholder=\"Company\"\r\n                    value={company}\r\n                    onChange={(value) => setCompany(value.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Post Title</label>\r\n                  <Form.Control\r\n                    className=\"my-2\"\r\n                    placeholder=\"Post Title\"\r\n                    value={title}\r\n                    onChange={(value) => setTitle(value.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Form.Group>\r\n                <label>Post Body</label>\r\n\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  className=\"my-2\"\r\n                  placeholder=\"Post Body\"\r\n                  value={body}\r\n                  onChange={(value) => setBody(value.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <div className=\"text-center\">\r\n                <Button type=\"submit\">CREATE</Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Body } from \"../Main/Body\";\r\nimport { Header } from \"../../Common/Header\";\r\n\r\nexport const Disliked = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Body statusDisplay=\"Disliked\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { LikedContext, UserContext } from \"../../App\";\r\nimport { Header } from \"../../Common/Header\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\r\nimport { ThumbDownAlt } from \"@material-ui/icons\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { Body } from \"../Main/Body\";\r\n\r\nexport const Liked = () => {\r\n  const { likedList, handleLiked } = useContext(LikedContext);\r\n  const userList = useContext(UserContext);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Body statusDisplay=\"Liked\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { UpdateContext } from \"../../App\";\r\nimport { Header } from \"../../Common/Header\";\r\nimport { Button, Card, Container, Form } from \"react-bootstrap\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport const Update = () => {\r\n  const { updateName, updatePost, handleUpdate, handleUpdateDetails } =\r\n    useContext(UpdateContext);\r\n  const [name, setName] = useState(updateName);\r\n  const [title, setTitle] = useState(updatePost.title);\r\n  const [body, setBody] = useState(updatePost.body);\r\n  const history = useHistory();\r\n  const handleUpdateData = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/Details_depictor\");\r\n    handleUpdateDetails(name, title, body, updatePost.id);\r\n  };\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Header />\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"75vh\" }}\r\n      >\r\n        <Card\r\n          className=\"w-100\"\r\n          style={{ maxWidth: \"800px\", border: \"1px solid\" }}\r\n        >\r\n          <Card.Header className=\"card-heading text-center text-white bg-dark\">\r\n            <b>Post Details</b>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => handleUpdateData(e)}>\r\n              <div className=\"row\">\r\n                {/* <div className=\"form-group col-md-6 \">\r\n                  <label>Creator Name</label>\r\n                  <Form.Control\r\n                    className=\"my-2\"\r\n                    // placeholder={\"Name\"}\r\n                    value={name}\r\n                    onChange={(value) => setName(value.target.value)}\r\n                    required\r\n                  />\r\n                </div> */}\r\n              </div>\r\n              <label>Title</label>\r\n\r\n              <Form.Control\r\n                className=\"my-2\"\r\n                value={title}\r\n                onChange={(value) => setTitle(value.target.value)}\r\n                required\r\n              />\r\n              <Form.Group>\r\n                <label>Body</label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  className=\"my-2\"\r\n                  value={body}\r\n                  onChange={(value) => setBody(value.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <Button type=\"submit\">UPDATE</Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    history.push(\"/Details_depictor\");\r\n                  }}\r\n                  className=\"btn btn-dark\"\r\n                >\r\n                  BACK\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","// import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Loader } from \"./Common/Loader\";\r\nimport { Main } from \"./Components/Main\";\r\nimport { Create } from \"./Components/Pages/Create\";\r\nimport { Disliked } from \"./Components/Pages/Disliked\";\r\nimport { Liked } from \"./Components/Pages/Liked\";\r\nimport { Update } from \"./Components/Pages/Update\";\r\nexport const PostsContext = React.createContext();\r\nexport const UserContext = React.createContext();\r\nexport const LikedContext = React.createContext();\r\nexport const DislikedContext = React.createContext();\r\nexport const DeleteContext = React.createContext();\r\nexport const SearchContext = React.createContext();\r\nexport const CreateContext = React.createContext();\r\nexport const UpdateContext = React.createContext();\r\n\r\nfunction App() {\r\n  const [postList, setPostList] = useState([]);\r\n  const [fakeList, setFakeList] = useState([]);\r\n  const [userList, setUserList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [likedList, setLikedList] = useState([]);\r\n  const [dislikedList, setDislikedList] = useState([]);\r\n  const [updatePost, setUpdatePost] = useState({});\r\n  const [updateName, setUpdateName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchDetails = async () => {\r\n      let res = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n        method: \"GET\",\r\n      });\r\n      let json = await res.json();\r\n      console.log(json);\r\n      setPostList(json);\r\n      setFakeList(json);\r\n      res = await fetch(\"https://jsonplaceholder.typicode.com/users\", {\r\n        method: \"GET\",\r\n      });\r\n      json = await res.json();\r\n      console.log(json);\r\n      setUserList(json);\r\n      setLoading(false);\r\n    };\r\n    fetchDetails();\r\n    return () => {};\r\n  }, []);\r\n  const handleLiked = (postId) => {\r\n    let currentLikedList = likedList;\r\n    let currentDislikedList = dislikedList;\r\n\r\n    postList.map((item) => {\r\n      if (postId == item.id && !currentLikedList.includes(item)) {\r\n        currentLikedList.unshift(item);\r\n        if (currentDislikedList.includes(item)) {\r\n          let index = currentDislikedList.indexOf(item);\r\n          currentDislikedList.splice(index, 1);\r\n        }\r\n      }\r\n    });\r\n    setLikedList([...currentLikedList]);\r\n    setDislikedList([...currentDislikedList]);\r\n  };\r\n  const handleDisliked = (postId) => {\r\n    let currentDislikedList = dislikedList;\r\n    let currentLikedList = likedList;\r\n    postList.map((item) => {\r\n      if (postId == item.id && !currentDislikedList.includes(item)) {\r\n        currentDislikedList.unshift(item);\r\n        if (currentLikedList.includes(item)) {\r\n          let index = currentLikedList.indexOf(item);\r\n          currentLikedList.splice(index, 1);\r\n        }\r\n      }\r\n    });\r\n    setDislikedList([...currentDislikedList]);\r\n    setLikedList([...currentLikedList]);\r\n  };\r\n  const handleDelete = (postId) => {\r\n    setPostList((prevList) => prevList.filter((post) => post.id != postId));\r\n  };\r\n  const handleSearch = (searchText) => {\r\n    let searchedPosts = [];\r\n    let fakeLikeList = [...likedList];\r\n    let fakeDislikeList = dislikedList;\r\n    let reg = new RegExp(searchText, \"i\");\r\n    fakeList.forEach((post) => {\r\n      userList.forEach((user) => {\r\n        if (\r\n          user.id == post.userId &&\r\n          user.name.match(reg) &&\r\n          !searchedPosts.includes(post)\r\n        ) {\r\n          searchedPosts.push(post);\r\n        }\r\n      });\r\n      if (\r\n        (post.title.match(reg) || post.body.match(reg)) &&\r\n        !searchedPosts.includes(post)\r\n      ) {\r\n        searchedPosts.push(post);\r\n      }\r\n    });\r\n    setPostList(searchedPosts);\r\n    // searchedPosts = [];\r\n    // fakeLikeList.forEach((post) => {\r\n    //   if (post.title.match(reg) || post.body.match(reg)) {\r\n    //     searchedPosts.push(post);\r\n    //   }\r\n    // });\r\n    // setLikedList(searchedPosts);\r\n  };\r\n  const handleCreate = (\r\n    name,\r\n    email,\r\n    website,\r\n    username,\r\n    addressStreet,\r\n    addressCity,\r\n    company,\r\n    title,\r\n    body\r\n  ) => {\r\n    let currentPostObject = {\r\n      userId: userList.length + 1,\r\n      id: postList.length + 1,\r\n      title,\r\n      body,\r\n    };\r\n    let currentUserObject = {\r\n      id: userList.length + 1,\r\n      name,\r\n      email,\r\n      website,\r\n      username,\r\n      company: {\r\n        name: company,\r\n      },\r\n      address: {\r\n        street: addressStreet,\r\n        city: addressCity,\r\n      },\r\n    };\r\n\r\n    postList.unshift(currentPostObject);\r\n    userList.unshift(currentUserObject);\r\n  };\r\n  const handleUpdate = (postId) => {\r\n    postList.map((post) => {\r\n      if (postId == post.id) {\r\n        setUpdatePost(post);\r\n        userList.forEach((user) => {\r\n          if (user.id == post.userId) {\r\n            setUpdateName(user.name);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const handleUpdateDetails = (name, title, body, postId) => {\r\n    postList.forEach((post) => {\r\n      if (post.id == postId) {\r\n        post.title = title;\r\n        post.body = body;\r\n        // userList.forEach((user) => {\r\n        //   if (user.id == post.userId && post.id == postId) {\r\n        //     user.name = name;\r\n        //   }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      {loading && <Loader />}\r\n      {!loading && (\r\n        <Router>\r\n          <Switch>\r\n            <PostsContext.Provider value={postList}>\r\n              <UserContext.Provider value={userList}>\r\n                <LikedContext.Provider value={{ likedList, handleLiked }}>\r\n                  <DislikedContext.Provider\r\n                    value={{ dislikedList, handleDisliked }}\r\n                  >\r\n                    <DeleteContext.Provider value={handleDelete}>\r\n                      <SearchContext.Provider value={handleSearch}>\r\n                        <CreateContext.Provider value={handleCreate}>\r\n                          <UpdateContext.Provider\r\n                            value={{\r\n                              updateName,\r\n                              updatePost,\r\n                              handleUpdate,\r\n                              handleUpdateDetails,\r\n                            }}\r\n                          >\r\n                            <Route exact path=\"/\">\r\n                              <Main />\r\n                            </Route>\r\n                            <Route path=\"/liked\">\r\n                              <Liked />\r\n                            </Route>\r\n                            <Route path=\"/disliked\">\r\n                              <Disliked />\r\n                            </Route>\r\n                            <Route path=\"/create\">\r\n                              <Create />\r\n                            </Route>\r\n                            <Route path=\"/update\">\r\n                              <Update />\r\n                            </Route>\r\n                            <Route path=\"/Details_depictor\">\r\n                              <Main />\r\n                            </Route>\r\n                          </UpdateContext.Provider>\r\n                        </CreateContext.Provider>\r\n                      </SearchContext.Provider>\r\n                    </DeleteContext.Provider>\r\n                  </DislikedContext.Provider>\r\n                </LikedContext.Provider>\r\n              </UserContext.Provider>\r\n            </PostsContext.Provider>\r\n          </Switch>\r\n        </Router>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}